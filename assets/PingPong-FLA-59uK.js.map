{"version":3,"file":"PingPong-FLA-59uK.js","sources":["../../src/components/home/games/PingPong.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport anime from \"animejs\";\r\n\r\nconst PingPongAnimation: React.FC = () => {\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const ballRef = useRef<HTMLDivElement>(null);\r\n  const paddle1Ref = useRef<HTMLDivElement>(null);\r\n  const paddle2Ref = useRef<HTMLDivElement>(null);\r\n  const glowRef = useRef<HTMLDivElement>(null);\r\n  const [score, setScore] = useState({ left: 0, right: 0 });\r\n  const gameStateRef = useRef({\r\n    isPlaying: true,\r\n    ballX: 50,\r\n    ballY: 150,\r\n    ballVX: 2.5,\r\n    ballVY: 1,\r\n    paddle1Y: 110,\r\n    paddle2Y: 110,\r\n    paddle1VY: 2,\r\n    paddle2VY: 2,\r\n    lastCollisionTime: 0, // To prevent multiple collisions\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !containerRef.current ||\r\n      !ballRef.current ||\r\n      !paddle1Ref.current ||\r\n      !paddle2Ref.current\r\n    )\r\n      return;\r\n\r\n    const paddleHeight = 80;\r\n    const containerWidth = 600;\r\n    const containerHeight = 300;\r\n    const ballSize = 20;\r\n    const COLLISION_COOLDOWN = 500; // Minimum time between collisions in ms\r\n\r\n    const initPositions = () => {\r\n      const gameState = gameStateRef.current;\r\n      if (!paddle1Ref.current || !paddle2Ref.current || !ballRef.current)\r\n        return;\r\n\r\n      anime.set(paddle1Ref.current, {\r\n        translateX: 20,\r\n        translateY: gameState.paddle1Y,\r\n      });\r\n\r\n      anime.set(paddle2Ref.current, {\r\n        translateX: containerWidth - 28,\r\n        translateY: gameState.paddle2Y,\r\n      });\r\n\r\n      anime.set(ballRef.current, {\r\n        translateX: gameState.ballX,\r\n        translateY: gameState.ballY,\r\n      });\r\n    };\r\n\r\n    const createHitEffect = (x: number, y: number) => {\r\n      const hitEffect = document.createElement(\"div\");\r\n      hitEffect.className =\r\n        \"absolute w-8 h-8 rounded-full bg-gradient-to-r from-blue-400 to-purple-400 opacity-60\";\r\n      hitEffect.style.left = `${x - 16}px`;\r\n      hitEffect.style.top = `${y - 16}px`;\r\n      containerRef.current?.appendChild(hitEffect);\r\n\r\n      anime({\r\n        targets: hitEffect,\r\n        scale: [1, 2],\r\n        opacity: [0.6, 0],\r\n        duration: 400,\r\n        easing: \"easeOutExpo\",\r\n        complete: () => hitEffect.remove(),\r\n      });\r\n    };\r\n\r\n    const predictBallPosition = (\r\n      currentY: number,\r\n      targetY: number,\r\n      speed: number\r\n    ) => {\r\n      if (Math.abs(currentY - targetY) < speed) return currentY;\r\n      return currentY + (targetY > currentY ? speed : -speed);\r\n    };\r\n\r\n    const handleScoring = (winner: \"left\" | \"right\") => {\r\n      const gameState = gameStateRef.current;\r\n      gameState.isPlaying = false;\r\n\r\n      setScore((prev) => ({\r\n        ...prev,\r\n        [winner]: prev[winner] + 1,\r\n      }));\r\n\r\n      // Pause for 1 second before resetting\r\n      setTimeout(() => {\r\n        gameState.ballX = containerWidth / 2;\r\n        gameState.ballY = containerHeight / 2;\r\n        gameState.ballVX = 2.5 * (winner === \"left\" ? -1 : 1);\r\n        gameState.ballVY = (Math.random() - 0.5) * 2;\r\n        gameState.isPlaying = true;\r\n      }, 1000);\r\n    };\r\n\r\n    const checkCollision = () => {\r\n      const gameState = gameStateRef.current;\r\n      const currentTime = Date.now();\r\n\r\n      // Only check collisions if enough time has passed since last collision\r\n      if (currentTime - gameState.lastCollisionTime < COLLISION_COOLDOWN) {\r\n        return false;\r\n      }\r\n\r\n      // Paddle collision checks with proper bounds\r\n      const leftPaddleCollision =\r\n        gameState.ballX <= 30 &&\r\n        gameState.ballX >= 20 &&\r\n        gameState.ballY + ballSize >= gameState.paddle1Y &&\r\n        gameState.ballY <= gameState.paddle1Y + paddleHeight;\r\n\r\n      const rightPaddleCollision =\r\n        gameState.ballX >= containerWidth - 38 &&\r\n        gameState.ballX <= containerWidth - 28 &&\r\n        gameState.ballY + ballSize >= gameState.paddle2Y &&\r\n        gameState.ballY <= gameState.paddle2Y + paddleHeight;\r\n\r\n      if (leftPaddleCollision || rightPaddleCollision) {\r\n        gameState.lastCollisionTime = currentTime;\r\n        createHitEffect(gameState.ballX, gameState.ballY);\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    const updateGame = () => {\r\n      const gameState = gameStateRef.current;\r\n\r\n      if (!gameState.isPlaying) {\r\n        requestAnimationFrame(updateGame);\r\n        return;\r\n      }\r\n\r\n      // Update ball position\r\n      gameState.ballX += gameState.ballVX;\r\n      gameState.ballY += gameState.ballVY;\r\n\r\n      // Ball collision with top and bottom\r\n      if (\r\n        gameState.ballY <= 0 ||\r\n        gameState.ballY >= containerHeight - ballSize\r\n      ) {\r\n        gameState.ballVY *= -1;\r\n        createHitEffect(gameState.ballX, gameState.ballY);\r\n      }\r\n\r\n      // Check for paddle collisions\r\n      if (checkCollision()) {\r\n        gameState.ballVX *= -1;\r\n        gameState.ballVY += (Math.random() - 0.5) * 1; // Small random angle change\r\n      }\r\n\r\n      // Scoring\r\n      if (gameState.ballX <= 0) {\r\n        handleScoring(\"right\");\r\n      } else if (gameState.ballX >= containerWidth) {\r\n        handleScoring(\"left\");\r\n      }\r\n\r\n      // AI paddle movement\r\n      const predictedY1 = gameState.ballY - paddleHeight / 2;\r\n      gameState.paddle1Y = predictBallPosition(\r\n        gameState.paddle1Y,\r\n        predictedY1,\r\n        gameState.paddle1VY\r\n      );\r\n\r\n      const timeToReach =\r\n        (containerWidth - 38 - gameState.ballX) / Math.abs(gameState.ballVX);\r\n      const predictedY2 =\r\n        gameState.ballY + gameState.ballVY * timeToReach - paddleHeight / 2;\r\n      gameState.paddle2Y = predictBallPosition(\r\n        gameState.paddle2Y,\r\n        predictedY2,\r\n        gameState.paddle2VY\r\n      );\r\n\r\n      // Keep paddles within bounds\r\n      gameState.paddle1Y = Math.max(\r\n        0,\r\n        Math.min(containerHeight - paddleHeight, gameState.paddle1Y)\r\n      );\r\n      gameState.paddle2Y = Math.max(\r\n        0,\r\n        Math.min(containerHeight - paddleHeight, gameState.paddle2Y)\r\n      );\r\n\r\n      // Update visual positions\r\n      if (ballRef.current) {\r\n        ballRef.current.style.transform = `translate(${gameState.ballX}px, ${gameState.ballY}px)`;\r\n      }\r\n      if (paddle1Ref.current) {\r\n        paddle1Ref.current.style.transform = `translate(20px, ${gameState.paddle1Y}px)`;\r\n      }\r\n      if (paddle2Ref.current) {\r\n        paddle2Ref.current.style.transform = `translate(${\r\n          containerWidth - 28\r\n        }px, ${gameState.paddle2Y}px)`;\r\n      }\r\n      if (glowRef.current) {\r\n        glowRef.current.style.transform = `translate(${gameState.ballX}px, ${gameState.ballY}px)`;\r\n      }\r\n\r\n      requestAnimationFrame(updateGame);\r\n    };\r\n\r\n    initPositions();\r\n    updateGame();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center w-full min-h-screen bg-gray-900 p-4 my-32\">\r\n      <div\r\n        ref={containerRef}\r\n        className=\"relative w-[600px] h-[300px] rounded-lg bg-gradient-to-br from-gray-800 to-gray-900 overflow-hidden\"\r\n      >\r\n        {/* Score display */}\r\n        <div className=\"absolute top-4 left-0 w-full flex justify-center gap-8 text-2xl text-white/70 font-semibold z-10\">\r\n          <span>{score.left}</span>\r\n          <span>{score.right}</span>\r\n        </div>\r\n\r\n        {/* Table lines */}\r\n        <div className=\"absolute left-1/2 top-0 w-px h-full bg-gradient-to-b from-blue-500/20 via-blue-500/40 to-blue-500/20\" />\r\n        <div className=\"absolute left-0 top-1/2 w-full h-px bg-gradient-to-r from-blue-500/20 via-blue-500/40 to-blue-500/20\" />\r\n\r\n        {/* Paddles */}\r\n        <div\r\n          ref={paddle1Ref}\r\n          className=\"absolute w-2 h-20 rounded-full bg-gradient-to-b from-blue-400 via-blue-500 to-blue-600\"\r\n        />\r\n        <div\r\n          ref={paddle2Ref}\r\n          className=\"absolute w-2 h-20 rounded-full bg-gradient-to-b from-purple-400 via-purple-500 to-purple-600\"\r\n        />\r\n\r\n        {/* Ball */}\r\n        <div\r\n          ref={ballRef}\r\n          className=\"absolute w-5 h-5 rounded-full bg-gradient-to-br from-white to-blue-200\"\r\n        />\r\n\r\n        {/* Ball glow effect */}\r\n        <div\r\n          ref={glowRef}\r\n          className=\"absolute w-12 h-12 rounded-full bg-blue-500/20 blur-xl pointer-events-none\"\r\n        />\r\n\r\n        {/* Table border glow */}\r\n        <div className=\"absolute inset-0 rounded-lg border border-blue-500/30\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PingPongAnimation;\r\n"],"names":["PingPongAnimation","containerRef","useRef","ballRef","paddle1Ref","paddle2Ref","glowRef","score","setScore","useState","gameStateRef","useEffect","paddleHeight","containerWidth","containerHeight","ballSize","COLLISION_COOLDOWN","initPositions","gameState","anime","createHitEffect","x","y","hitEffect","_a","predictBallPosition","currentY","targetY","speed","handleScoring","winner","prev","checkCollision","currentTime","leftPaddleCollision","rightPaddleCollision","updateGame","predictedY1","timeToReach","predictedY2","jsx","jsxs"],"mappings":"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"}